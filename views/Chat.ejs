<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet"/>
    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="<%= socketIOClientScript %>"></script>
    <title>Student Messages</title>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        primary: {
                            50: '#f0f9ff',
                            100: '#e0f2fe',
                            200: '#bae6fd',
                            300: '#7dd3fc',
                            400: '#38bdf8',
                            500: '#0ea5e9',
                            600: '#0284c7',
                            700: '#0369a1',
                            800: '#075985',
                            900: '#0c4a6e',
                        }
                    }
                }
            }
        }
    </script>
    <style>
        @media (min-width: 1024px) {
            .main-content {
                margin-left: 16rem;
            }
        }
        
        /* Custom scrollbar */
        .scroll-container::-webkit-scrollbar {
            width: 6px;
        }
        .scroll-container::-webkit-scrollbar-track {
            background: #f1f1f1;
        }
        .scroll-container::-webkit-scrollbar-thumb {
            background: #c1c1c1;
            border-radius: 3px;
        }
        
        /* Message bubbles */
        .sent-message {
            background-color: #0ea5e9;
            color: white;
            border-radius: 1rem 1rem 0 1rem;
            margin-left: auto;
            max-width: 75%;
        }
        
        .received-message {
            background-color: #e5e7eb;
            color: #111827;
            border-radius: 1rem 1rem 1rem 0;
            margin-right: auto;
            max-width: 75%;
        }
        
        /* Active student highlight */
        .active-student {
            background-color: #0ea5e9;
            color: white;
        }
    </style>
</head>
<body class="bg-gray-50">
    <!-- Sidebar Navigation -->
    <div class="fixed inset-y-0 left-0 z-50 w-64 bg-white shadow-lg transform -translate-x-full lg:translate-x-0 transition-transform duration-200 ease-in-out">
        <div class="flex flex-col h-full p-4">
            <div class="flex items-center h-16 px-4 border-b border-gray-200">
                <h1 class="text-lg font-semibold text-gray-900">Supervisor Dashboard</h1>
            </div>
            <div class="flex-1 flex flex-col pt-5 overflow-y-auto">
                <a href="/supervisor" class="group flex items-center px-2 py-2 text-sm font-medium rounded-md text-gray-600 hover:bg-gray-50 hover:text-gray-900">
                    <i class="fas fa-gauge mr-3 text-gray-400 group-hover:text-gray-500"></i>
                    <span>Dashboard</span>
                </a>
                <a href="/supervisor/thesis" class="group flex items-center px-2 py-2 text-sm font-medium rounded-md text-gray-600 hover:bg-gray-50 hover:text-gray-900">
                    <i class="fas fa-book mr-3 text-gray-400 group-hover:text-gray-500"></i>
                    <span>Thesis</span>
                </a>
                <a href="/supervisor/students" class="group flex items-center px-2 py-2 text-sm font-medium rounded-md text-gray-600 hover:bg-gray-50 hover:text-gray-900">
                    <i class="fas fa-users mr-3 text-gray-400 group-hover:text-gray-500"></i>
                    <span>Students</span>
                </a>
                <a href="/supervisor/students/message" class="group flex items-center px-2 py-2 text-sm font-medium rounded-md bg-primary-50 text-primary-700">
                    <i class="fas fa-comments mr-3 text-primary-600"></i>
                    <span>Messages</span>
                </a>
                <a href="/supervisor/approval" class="group flex items-center px-2 py-2 text-sm font-medium rounded-md text-gray-600 hover:bg-gray-50 hover:text-gray-900">
                    <i class="fas fa-lock mr-3 text-gray-400 group-hover:text-gray-500"></i>
                    <span>Approval</span>
                </a>
                <a href="/logout" class="group flex items-center px-2 py-2 text-sm font-medium rounded-md text-gray-600 hover:bg-gray-50 hover:text-gray-900">
                    <i class="fas fa-right-from-bracket mr-3 text-gray-400 group-hover:text-gray-500"></i>
                    <span>Logout</span>
                </a>
            </div>
            <div class="p-4 border-t border-gray-200">
                <div class="flex items-center">
                    <div class="h-10 w-10 rounded-full bg-primary-100 flex items-center justify-center">
                        <span class="text-primary-600 font-medium"><%= user.fName.charAt(0) %></span>
                    </div>
                    <div class="ml-3">
                        <p class="text-sm font-medium text-gray-700"><%- user.fName%></p>
                        <p class="text-xs font-medium text-gray-500">Supervisor</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="flex flex-col lg:ml-64">
        <!-- Top Navigation -->
        <nav class="bg-white shadow-sm">
            <div class="flex justify-between items-center px-4 py-3">
                <button class="lg:hidden text-gray-500 hover:text-gray-600" id="mobile-sidebar-toggle">
                    <i class="fas fa-bars"></i>
                </button>
                <div class="flex items-center space-x-4">
                    <div class="relative">
                        <button class="flex items-center space-x-2">
                            <span class="text-gray-700">Welcome, <%- user.fName%></span>
                            <div class="w-8 h-8 rounded-full bg-primary-100 flex items-center justify-center">
                                <span class="text-primary-600 font-medium"><%= user.fName.charAt(0) %></span>
                            </div>
                        </button>
                    </div>
                </div>
            </div>
        </nav>

        <!-- Chat Container -->
        <div class="flex-1 p-4 lg:p-6">
            <div class="max-w-6xl mx-auto bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden">
                <div class="flex flex-col md:flex-row h-[70vh]">
                    <!-- Student List -->
                    <div class="w-full md:w-1/4 border-r border-gray-200 bg-gray-50">
                        <div class="p-4 border-b border-gray-200">
                            <h2 class="text-lg font-medium text-gray-800">Students</h2>
                        </div>
                        <div class="overflow-y-auto h-full scroll-container">
                            <ul id="student-list" class="divide-y divide-gray-200">
                                <% students.forEach((student) => { %>
                                <li class="px-4 py-3 hover:bg-gray-100 cursor-pointer transition" 
                                    data-studentid="<%= student.ID %>">
                                    <div class="flex items-center">
                                        <div class="h-10 w-10 rounded-full bg-gray-200 flex items-center justify-center mr-3">
                                            <span class="text-gray-600 font-medium"><%= student.fName.charAt(0) %><%= student.lName.charAt(0) %></span>
                                        </div>
                                        <div>
                                            <p class="text-sm font-medium text-gray-800"><%= student.fName %> <%= student.lName %></p>
                                            <p class="text-xs text-gray-500">Last active: Today</p>
                                        </div>
                                    </div>
                                </li>
                                <% }) %>
                            </ul>
                        </div>
                    </div>

                    <!-- Chat Area -->
                    <div class="w-full md:w-3/4 flex flex-col">
                        <div class="p-4 border-b border-gray-200">
                            <h2 class="text-lg font-medium text-gray-800" id="chat-header">
                                Select a student to start chatting
                            </h2>
                        </div>
                        
                        <!-- Messages Container -->
                        <div id="messages" class="flex-1 p-4 overflow-y-auto scroll-container space-y-3">
                            <div class="h-full flex items-center justify-center text-gray-400" id="empty-state">
                                <div class="text-center">
                                    <i class="fas fa-comments text-4xl mb-2"></i>
                                    <p>No conversation selected</p>
                                    <p class="text-sm mt-1">Choose a student from the list to view messages</p>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Message Form -->
                        <div class="p-4 border-t border-gray-200" id="message-form-container" style="display: none;">
                            <form id="message-form" class="flex gap-2">
                                <input
                                    type="text"
                                    name="message"
                                    id="message-input"
                                    autocomplete="off"
                                    placeholder="Type your message here..."
                                    class="flex-1 border border-gray-300 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                                />
                                <button
                                    type="submit"
                                    class="bg-primary-600 text-white px-4 py-2 rounded-lg hover:bg-primary-700 transition flex items-center justify-center w-24"
                                >
                                    <i class="fas fa-paper-plane mr-2"></i>Send
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Socket.io Script -->
    <script>
        // Connect to the Socket.io server
        const socket = io();

        // Handle click event on student list items
        document.getElementById('student-list').addEventListener('click', async (event) => {
            const selectedStudent = event.target.closest('li');
            
            if (selectedStudent) {
                const studentId = selectedStudent.getAttribute('data-studentid');
                const studentName = selectedStudent.querySelector('p.text-gray-800').textContent;
                
                // Update chat header
                document.getElementById('chat-header').textContent = `Chat with ${studentName}`;
                
                // Show message form
                document.getElementById('message-form-container').style.display = 'block';
                
                // Fetch messages for this student
                const response = await fetch(`/supervisor/students/message/chat/${studentId}`);
                const { messages } = await response.json();
                
                const input = document.getElementById('message-input');
                input.focus();
                input.setAttribute('data-studentid', studentId);

                // Clear and render messages
                const messagesContainer = document.getElementById('messages');
                messagesContainer.innerHTML = '';
              

                messages.forEach((message) => {
                   const messageElement = document.createElement('div');
messageElement.className = message.sender === 'supervisor' 
    ? 'flex justify-end' 
    : 'flex justify-start';

const messageBubble = document.createElement('div');
messageBubble.className = message.sender === 'supervisor'
    ? 'max-w-xs lg:max-w-md bg-indigo-100 text-indigo-900 rounded-xl p-4'
    : 'max-w-xs lg:max-md bg-gray-200 text-gray-800 rounded-xl p-4';

const messageText = document.createElement('p');
messageText.className = 'text-sm';
messageText.textContent = message.message;

const timeText = document.createElement('p');
timeText.className = message.sender === 'supervisor'
    ? 'text-xs text-indigo-500 mt-1 text-right'
    : 'text-xs text-gray-500 mt-1';

const formattedDate = new Date(message.timestamp || new Date()).toLocaleString([], {
    year: 'numeric',
    month: 'short',
    day: 'numeric',
    hour: '2-digit',
    minute: '2-digit'
});
timeText.textContent = formattedDate;

messageBubble.appendChild(messageText);
messageBubble.appendChild(timeText);
messageElement.appendChild(messageBubble);
messagesContainer.appendChild(messageElement);

// Scroll to bottom
messagesContainer.scrollTop = messagesContainer.scrollHeight;
                });

                // Highlight selected student
                document.querySelectorAll('#student-list li').forEach(item => {
                    item.classList.remove('active-student');
                });
                selectedStudent.classList.add('active-student');

                // Join the room for this student
                const studentRoom = `supervisor_<%= user.ID %>_student_${studentId}`;
                socket.emit('join room', { room: studentRoom });
                
                // Scroll to bottom
                messagesContainer.scrollTop = messagesContainer.scrollHeight;
            }
        });

        // Handle received chat messages
        socket.on('chat message', (message) => {
            
            const messagesContainer = document.getElementById('messages');
            
            const { sender, message: msg, timestamp } = message;

        const messageElement = document.createElement("div");
        messageElement.className =
          sender === "supervisor" ? "flex justify-end" : "flex justify-start";
        const messageBubble = document.createElement("div");
        messageBubble.className =
          sender === "supervisor"
            ? "max-w-xs lg:max-w-md bg-indigo-100 text-indigo-900 rounded-xl p-4"
            : "max-w-xs lg:max-w-md bg-gray-200 text-gray-800 rounded-xl p-4";

        const messageText = document.createElement("p");
        messageText.textContent = msg;
        const timeText = document.createElement("p");
        timeText.className =
          sender === "supervisor"
            ? "text-xs text-indigo-500 mt-1 text-right"
            : "text-xs text-gray-500 mt-1";

        const formattedDate = new Date(timestamp || new Date()).toLocaleString(
          [],
          {
            year: "numeric",
            month: "short",
            day: "numeric",
            hour: "2-digit",
            minute: "2-digit",
          }
        );
        timeText.textContent = formattedDate;

        messageBubble.appendChild(messageText);
        messageBubble.appendChild(timeText);
        messageElement.appendChild(messageBubble);
        messagesContainer.appendChild(messageElement);

        // Scroll to bottom
        messagesContainer.scrollTop = messagesContainer.scrollHeight;
        });

        // Handle form submission
        document.getElementById('message-form').addEventListener('submit', (event) => {
            event.preventDefault();
            const input = document.getElementById('message-input');
            const studentId = input.getAttribute('data-studentid');
            const message = input.value.trim();
            
            if (message && studentId) {
                // Emit the chat message
                const studentRoom = `supervisor_<%= user.ID %>_student_${studentId}`;
                socket.emit('chat message', { 
                    sender: 'supervisor', 
                    room: studentRoom, 
                    message, 
                    studentid: studentId 
                });
 // Create and display the sent message
            const messagesContainer = document.getElementById("messages");
            const messageElement = document.createElement("div");
            messageElement.className = "flex justify-end";
            const messageBubble = document.createElement("div");
            messageBubble.className =
              "max-w-xs lg:max-w-md bg-indigo-100 text-indigo-900 rounded-xl p-4";

            const messageText = document.createElement("p");
            messageText.textContent = message;

            const timeText = document.createElement("p");
            timeText.className = "text-xs text-indigo-500 mt-1 text-right";
            timeText.textContent = new Date().toLocaleString([], {
              year: "numeric",
              month: "short",
              day: "numeric",
              hour: "2-digit",
              minute: "2-digit",
            });

            messageBubble.appendChild(messageText);
            messageBubble.appendChild(timeText);
            messageElement.appendChild(messageBubble);
            messagesContainer.appendChild(messageElement);

            // Clear input and scroll to bottom
            input.value = "";
            messagesContainer.scrollTop = messagesContainer.scrollHeight;
            }
        });

        // Toggle mobile sidebar
        document.getElementById('mobile-sidebar-toggle').addEventListener('click', function() {
            document.querySelector('.fixed.inset-y-0').classList.toggle('-translate-x-full');
        });
    </script>
</body>
</html>